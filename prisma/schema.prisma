generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider     = "mongodb"
  url          = env("DATABASE_URL")
  relationMode = "prisma"
}

model Account {
  id                 String    @id @default(cuid()) @map("_id")
  userId             String
  providerType       String
  providerId         String
  providerAccountId  String
  email              String?
  firstName          String
  lastName           String
  userSignature      String
  refreshToken       String?
  accessToken        String?
  accessTokenExpires DateTime?
  createdAt          DateTime  @default(now())
  updatedAt          DateTime  @updatedAt
  user               User      @relation(fields: [userId], references: [id])

  @@unique([providerId, providerAccountId])
}

model Session {
  id           String   @id @default(cuid()) @map("_id")
  userId       String
  expires      DateTime
  sessionToken String   @unique
  accessToken  String   @unique
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt
  user         User     @relation(fields: [userId], references: [id])
}

model User {
  id            String    @id @default(cuid()) @map("_id")
  firstName     String
  lastName      String
  email         String?   @unique
  password      String
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt
  accounts      Account[]
  sessions      Session[]
  userSignature String
}

model VerificationRequest {
  id         String   @id @default(cuid()) @map("_id")
  identifier String
  token      String   @unique
  expires    DateTime
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt

  @@unique([identifier, token])
}

model Valve {
  id              String            @id @default(cuid()) @map("_id")
  firma           String
  type            String
  serialNumber    String
  createdAt       DateTime          @default(now())
  updatedAt       DateTime          @updatedAt
  userId          String
  email           String
  userSignature   String
  firstName       String
  lastName        String
  description     String?
  clientEmailPerm Boolean
  clientEmail     String?
  infoBlocks      ValvesInfoBlock[]
}

model ValvesInfoBlock {
  id                String  @id @default(cuid()) @map("_id")
  valveLocation     String
  valveType         String
  valveSerialNumber String
  pressureOpen      Float
  pressureClose     Float
  pressureSetting   Float
  description       String?
  Valve             Valve?  @relation(fields: [valveId], references: [id])
  valveId           String?
}

model Humidifier {
  id                   String               @id @default(cuid()) @map("_id")
  createdAt            DateTime             @default(now())
  updatedAt            DateTime             @updatedAt
  firma                String
  type                 String
  serialNumber         String
  email                String
  userId               String
  userSingature        String
  protectionType       String
  ratedCurrent         String
  description          String?
  nameplateVoltage     String
  nameplatePhase       String
  nameplateCurrentDraw String
  cylinders            Cylinder[]
  materials            HumidifierMaterial[]
}

model Cylinder {
  id             String     @id @default(cuid()) @map("_id")
  humidifier     Humidifier @relation(fields: [cylinderId], references: [id])
  cylinderId     String
  cylinderNumber String
  voltage1       String
  voltage2       String
  voltage3       String
  amper1         String
  amper2         String
  amper3         String
}

model HumidifierMaterial {
  id                 String     @id @default(cuid()) @map("_id")
  materialDecription String
  materialAmount     String
  materialId         String
  humidifier         Humidifier @relation(fields: [materialId], references: [id])
}

model Firma {
  id           String   @id @default(cuid()) @map("_id")
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt
  name         String
  shortName    String
  street       String
  houseNumber  Float
  localNumber  Float?
  postCode     String
  city         String
  tel          String?
  contactEmail String?
}
